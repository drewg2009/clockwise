// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using UIKit;

namespace Clockwise.iOS
{
	public partial class ViewController : UIViewController
	{
		private bool settingsExpanded = false;

		public ViewController(IntPtr handle) : base(handle)
		{

		}

		public override void ViewDidLoad()
		{
			base.ViewDidLoad();
			toggleAlarmSettingBtns();

			alarmToggle.TouchUpInside += delegate
			{
				Console.WriteLine("toggle alarm");
			};

			settingsButton.TouchUpInside += delegate
			{
				Console.WriteLine("settings button");
				toggleSettingsAnimation();
			};

			addModuleButton.TouchUpInside += delegate
			{
				Console.WriteLine("add module");
			};
		}

		public override void DidReceiveMemoryWarning()
		{
			base.DidReceiveMemoryWarning();
		}

		private void toggleAlarmSettingBtns()
		{
			settingsToneButton.Hidden = !settingsToneButton.Hidden;
			settingsSnoozeButton.Hidden = !settingsSnoozeButton.Hidden;
			settingsSpeechButton.Hidden = !settingsSpeechButton.Hidden;
			settingsOrderButton.Hidden = !settingsOrderButton.Hidden;
			settingsAboutButton.Hidden = !settingsAboutButton.Hidden;
		}


		private void toggleSettingsAnimation()
		{
			UIView.Animate(.2, () =>
				 {
				//animate by getting the current frame in a variable, changing it, and reassigning it


					 var frame = alarmButtonsContainer.Frame;
					 var frame2 = pullDownMenu.Frame;
					 int factor = 50;
					 int change = settingsExpanded ? -factor : factor ;

					 frame.Height = alarmButtonsContainer.Frame.Height + change;
					 frame2.Y += change;

					 alarmButtonsContainer.Frame = frame;
					 pullDownMenu.Frame = frame2;
					 toggleAlarmSettingBtns();

					 settingsExpanded = !settingsExpanded; //toggle expansion flag
				 }
			  );
		}
	}
}
